{"version":3,"sources":["context.js","Todo/TodoItem.js","Todo/TodoList.js","Todo/AddTodo.js","App.js","reportWebVitals.js","index.js"],"names":["Context","React","createContext","TodoItem","props","useContext","removeTodo","toggleTodo","todo","index","classes","cn","done","complited","className","type","checked","onChange","id","name","onClick","TodoList","todos","map","AddTodo","onCreate","useState","value","setValue","onSubmit","e","preventDefault","trim","target","App","setTodos","Provider","filter","role","concat","Date","now","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0MAIeA,EAFCC,IAAMC,gB,OCEP,SAASC,EAASC,GAC7B,MAAmCC,qBAAWL,GAAtCM,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,WAEZC,EAAgBJ,EAAhBI,KAAMC,EAAUL,EAAVK,MAERC,EAAUC,IAAG,CACfC,KAAMJ,EAAKK,YAGf,OACI,qBAAIC,UAAU,eAAd,UACI,uBAAMA,UAAWJ,EAAjB,UACI,uBAAOI,UAAU,kBAAkBC,KAAK,WAAWC,QAASR,EAAKK,UAAWI,SAAU,kBAAMV,EAAWC,EAAKU,OAC5G,iCAAUT,EAAQ,IAFtB,OAIKD,EAAKW,QAEV,wBAAQL,UAAU,KAAKM,QAAS,kBAAMd,EAAWE,EAAKU,KAAtD,qBClBG,SAASG,EAASjB,GAC7B,IAAMkB,EAAQlB,EAAMkB,MACpB,OACI,oBAAIR,UAAU,eAAd,SACKQ,EAAMC,KAAI,SAACf,EAAMC,GAAP,OAAiB,cAACN,EAAD,CAAwBK,KAAMA,EAAMC,MAAOA,GAA5BD,EAAKU,SCgB7CM,MArBf,SAAiBpB,GACb,IAAQqB,EAAarB,EAAbqB,SACR,EAAwBxB,IAAMyB,SAAS,IAAvC,mBAAKC,EAAL,KAAYC,EAAZ,KAWA,OACA,uBAAMd,UAAU,gBAAgBe,SATX,SAACC,GAClBA,EAAEC,iBACCJ,EAAMK,SACLP,EAASE,GACTC,EAAS,MAKjB,UACI,uBAAOb,KAAK,OAAOD,UAAU,iBAAiBa,MAAOA,EAAOV,SAX7C,SAACa,GAAD,OAAOF,EAASE,EAAEG,OAAON,UAYxC,wBAAQZ,KAAK,SAASD,UAAU,kBAAhC,qBC8BOoB,MA3Cf,WACE,MAA0BjC,IAAMyB,SAAS,CACvC,CAACR,GAAI,EAAGL,WAAW,EAAOM,KAAM,YAChC,CAACD,GAAI,EAAGL,WAAW,EAAOM,KAAM,eAFlC,mBAAOG,EAAP,KAAca,EAAd,KA+BA,OACE,cAAC,EAAQC,SAAT,CAAkBT,MAAO,CAAErB,WAjB7B,SAAoBY,GAClBiB,EACEb,EAAMe,QAAO,SAAC7B,GAAD,OAAUU,IAAOV,EAAKU,QAeEX,WA3BzC,SAAoBW,GAClBiB,EACEb,EAAMC,KAAI,SAACf,GAIX,OAHIU,IAAOV,EAAKU,KACdV,EAAKK,WAAaL,EAAKK,WAElBL,QAqBT,SACE,sBAAKM,UAAU,UAAf,UACE,+CAAiB,sBAAMwB,KAAK,MAAM,aAAW,WAA5B,6BACjB,cAAC,EAAD,CAASb,SAdf,SAAiBN,GACfgB,EACEb,EAAMiB,OAAO,CACXpB,OACAD,GAAIsB,KAAKC,MACT5B,WAAW,QAUTS,EAAMoB,OAAS,cAACrB,EAAD,CAAUC,MAAOA,IAAY,wDAA0B,sBAAMgB,KAAK,MAAM,aAAW,UAA5B,mCC9BjEK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1Bb,M","file":"static/js/main.f6987bb7.chunk.js","sourcesContent":["import React from 'react'\n\nconst Context = React.createContext();\n\nexport default Context;","import React, { useContext } from 'react'\nimport cn from 'classnames';\nimport Context from '../context';\n\nexport default function TodoItem(props) {\n    const { removeTodo, toggleTodo } = useContext(Context);\n\n    const { todo, index } = props;\n\n    const classes = cn({\n        done: todo.complited,\n    })\n\n    return (\n        <li className='todo-item-li'>\n            <span className={classes} >\n                <input className='todo-item-input' type='checkbox' checked={todo.complited} onChange={() => toggleTodo(todo.id)} />\n                <strong >{index + 1}</strong>\n                &nbsp;\n                {todo.name}\n            </span>\n            <button className='rm' onClick={() => removeTodo(todo.id)}>&times;</button> \n        </li>\n    )\n}","import React from 'react'\nimport TodoItem from './TodoItem'\n\nexport default function TodoList(props) {\n    const todos = props.todos;\n    return (\n        <ul className='todo-list-ul'>\n            {todos.map((todo, index) => <TodoItem key={todo.id} todo={todo} index={index}/>\n            ) }\n        </ul>\n    )\n}","import React from 'react'\n\nfunction AddTodo(props) {\n    const { onCreate } = props;\n    let [value, setValue] = React.useState('');\n\n    const changeText = (e) => setValue(e.target.value)\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if(value.trim()) {\n            onCreate(value);\n            setValue('');\n        }\n    }\n\n    return (\n    <form className=\"add-todo-form\" onSubmit={handleSubmit}>\n        <input type='text' className=\"add-todo-input\" value={value} onChange={changeText} />\n        <button type='submit' className=\"add-todo-button\">Add</button>\n    </form>\n    )\n}\n\nexport default AddTodo;","import React from 'react'\nimport TodoList from './Todo/TodoList'\nimport Context from './context'\nimport AddTodo from './Todo/AddTodo';\n\nfunction App() {\n  const [todos, setTodos] = React.useState([\n    {id: 0, complited: false, name: 'Buy milk'},\n    {id: 1, complited: false, name: 'Buy bread'}\n  ]);\n\n  function toggleTodo(id) {\n    setTodos( \n      todos.map((todo) => {\n      if (id === todo.id) {\n        todo.complited = !todo.complited;\n      }\n      return todo;  \n    }))\n  }\n\n  function removeTodo(id) {\n    setTodos(\n      todos.filter((todo) => id !== todo.id)\n    )\n  }\n\n  function addTodo(name) {\n    setTodos(\n      todos.concat({\n        name,\n        id: Date.now(),\n        complited: false,\n      })\n    )\n  }\n\n  return (\n    <Context.Provider value={{ removeTodo, toggleTodo }}>\n      <div className='wrapper'>\n        <h1>Things to do <span role=\"img\" aria-label=\"honeybee\">üêù</span></h1>\n        <AddTodo onCreate={addTodo}/>\n        { todos.length ? <TodoList todos={todos} /> : <p>There is nothing to do <span role=\"img\" aria-label=\"OK hand\">üëå</span></p>}\n      </div>\n    </Context.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}